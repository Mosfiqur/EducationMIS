// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnicefEducationMIS.Data;

namespace UnicefEducationMIS.Data.Migrations
{
    [DbContext(typeof(UnicefEduDbContext))]
    [Migration("20210511053716_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Beneficiary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.BeneficiaryDataCollectionStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<long>("BeneficiaryId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Beneciary_Data_Collection_Status");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.BeneficiaryDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BeneficiaryId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Beneficiary_Dynamic_Cell");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampId");

                    b.ToTable("Block");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Camp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("NameAlias")
                        .HasColumnType("text");

                    b.Property<string>("SSID")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int>("UnionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnionId");

                    b.ToTable("Camp");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.CampCoordinate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CampId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampId");

                    b.ToTable("Camp_Coordinate");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.EducationSectorPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("PartnerName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Education_Sector_Partners");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.EmbeddedDashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsEmbedded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Embedded_Dashboard");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.EntityDynamicColumn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ColumnListId")
                        .HasColumnType("bigint");

                    b.Property<int>("ColumnType")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAutoCalculated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool?>("IsMultiValued")
                        .HasColumnType("BOOLEAN");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("NameInBangla")
                        .HasColumnType("text");

                    b.Property<int?>("TargetedPopulation")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColumnListId");

                    b.ToTable("Entity_Dynamic_Column");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Facility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.FacilityDataCollectionStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Facilities_DataCollection_Status");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.FacilityDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("FacilityId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Facility_Dynamic_Cell");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.AgeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FR_Age_Group");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.BudgetFramework", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("FR_Budgets");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.BudgetFrameworkDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BudgetFrameworkId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BudgetFrameworkId");

                    b.HasIndex("EntityDynamicColumnId");

                    b.ToTable("FR_Budget_Dynamic_Cells");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.Donor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FR_Donor");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.MonitoringFramework", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Objective")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FR_Monitorings");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.MonitoringFrameworkDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("ObjectiveIndicatorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("ObjectiveIndicatorId");

                    b.ToTable("FR_Monitoring_Dynamic_Cells");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.ObjectiveIndicator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BaseLine")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Indicator")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("MonitoringFrameworkId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("ReportingFrequencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringFrameworkId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ReportingFrequencyId");

                    b.ToTable("FR_Objective_Indicators");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FR_Project");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.ReportingFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FR_Reporting_Frequency");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.TargetFramework", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AgeGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("CampId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("EndMonth")
                        .HasColumnType("int");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("PeopleInNeed")
                        .HasColumnType("int");

                    b.Property<int>("StartMonth")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<int>("TargetedPopulation")
                        .HasColumnType("int");

                    b.Property<int>("UnionId")
                        .HasColumnType("int");

                    b.Property<int>("UpazilaId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("CampId");

                    b.ToTable("FR_Targets");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.TargetFrameworkDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("TargetFrameworkId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("TargetFrameworkId");

                    b.ToTable("FR_Target_Dynamic_Cells");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Frequency", b =>
                {
                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<string>("DaysOfWeek")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedule_Frequencies");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.GridView", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grid_View");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.GridViewDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("ColumnOrder")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<long>("GridViewId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("GridViewId");

                    b.ToTable("Grid_View_Details");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<byte>("LevelId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("PermissionPresetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("PermissionPresetId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Role_Claims");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("DesignationName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User_Claims");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.UserLogin", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserId");

                    b.ToTable("User_Logins");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("User_Tokens");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Instance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCollectionDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Schedule_Instances");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.InstanceIndicator", b =>
                {
                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<int>("ColumnOrder")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("EntityDynamicColumnId", "InstanceId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Instance_Indicator");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.InstanceMapping", b =>
                {
                    b.Property<long>("BeneficiaryInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("FacilityInstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("BeneficiaryInstanceId");

                    b.ToTable("Instance_Mapping");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.JrpParameterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("IndicatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndicatorId");

                    b.HasIndex("TargetId");

                    b.ToTable("Jrp_Parameter_Info");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.ListDataType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("List_Object");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 732, DateTimeKind.Local).AddTicks(7355),
                            Name = "Education Level"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(2957),
                            Name = "Damage Status"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3253),
                            Name = "Damage Caused By"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3271),
                            Name = "Action Required"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3281),
                            Name = "Taken Action"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3300),
                            Name = "How many time the facility damage"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3311),
                            Name = "Targeted Population"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3323),
                            Name = "Facility Type"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3333),
                            Name = "Facility Status"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 737, DateTimeKind.Local).AddTicks(3347),
                            Name = "Sex"
                        });
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.ListItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ColumnListId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColumnListId");

                    b.ToTable("List_Item");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ColumnListId = 1L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Level 1",
                            Value = 1
                        },
                        new
                        {
                            Id = 2L,
                            ColumnListId = 1L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Level 2",
                            Value = 2
                        },
                        new
                        {
                            Id = 3L,
                            ColumnListId = 1L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Level 3",
                            Value = 3
                        },
                        new
                        {
                            Id = 4L,
                            ColumnListId = 1L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Level 4",
                            Value = 4
                        },
                        new
                        {
                            Id = 5L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Slightly Damaged",
                            Value = 1
                        },
                        new
                        {
                            Id = 6L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Medium Damaged",
                            Value = 2
                        },
                        new
                        {
                            Id = 7L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Heavily Damaged",
                            Value = 3
                        },
                        new
                        {
                            Id = 8L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Repaired",
                            Value = 4
                        },
                        new
                        {
                            Id = 9L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Decommissioned",
                            Value = 5
                        },
                        new
                        {
                            Id = 10L,
                            ColumnListId = 2L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Others (Mentioned on Remarks)",
                            Value = 6
                        },
                        new
                        {
                            Id = 11L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cyclone",
                            Value = 1
                        },
                        new
                        {
                            Id = 12L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Flood",
                            Value = 2
                        },
                        new
                        {
                            Id = 13L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Landslide",
                            Value = 3
                        },
                        new
                        {
                            Id = 14L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Landslide & Flood",
                            Value = 4
                        },
                        new
                        {
                            Id = 15L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Landslide, Flood & Storm surge",
                            Value = 5
                        },
                        new
                        {
                            Id = 16L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lighthening",
                            Value = 6
                        },
                        new
                        {
                            Id = 17L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rain",
                            Value = 7
                        },
                        new
                        {
                            Id = 18L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rain and Flood",
                            Value = 8
                        },
                        new
                        {
                            Id = 19L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rain and Storm surge",
                            Value = 9
                        },
                        new
                        {
                            Id = 20L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rain, Flood and storm surge",
                            Value = 10
                        },
                        new
                        {
                            Id = 21L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Road construction",
                            Value = 11
                        },
                        new
                        {
                            Id = 22L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Storm surge",
                            Value = 12
                        },
                        new
                        {
                            Id = 23L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lands taken by authority",
                            Value = 13
                        },
                        new
                        {
                            Id = 24L,
                            ColumnListId = 3L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Others (Mentioned on Remarks)",
                            Value = 14
                        },
                        new
                        {
                            Id = 25L,
                            ColumnListId = 4L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tied-up/renovate LC that is in potential damage threat",
                            Value = 1
                        },
                        new
                        {
                            Id = 26L,
                            ColumnListId = 4L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Repair damaged LC",
                            Value = 2
                        },
                        new
                        {
                            Id = 27L,
                            ColumnListId = 4L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Others (Mentioned on Remarks)",
                            Value = 3
                        },
                        new
                        {
                            Id = 28L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Repaired",
                            Value = 1
                        },
                        new
                        {
                            Id = 29L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Repair work ongoing",
                            Value = 2
                        },
                        new
                        {
                            Id = 30L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Reallocation",
                            Value = 3
                        },
                        new
                        {
                            Id = 31L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Planned for action",
                            Value = 4
                        },
                        new
                        {
                            Id = 32L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Decommisionned",
                            Value = 5
                        },
                        new
                        {
                            Id = 33L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "No action taken",
                            Value = 6
                        },
                        new
                        {
                            Id = 34L,
                            ColumnListId = 5L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Others(Mentioned on Remarks)",
                            Value = 7
                        },
                        new
                        {
                            Id = 35L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1st time",
                            Value = 1
                        },
                        new
                        {
                            Id = 36L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "2nd time",
                            Value = 2
                        },
                        new
                        {
                            Id = 37L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "3rd time",
                            Value = 3
                        },
                        new
                        {
                            Id = 38L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "4th time",
                            Value = 4
                        },
                        new
                        {
                            Id = 39L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "5th time",
                            Value = 5
                        },
                        new
                        {
                            Id = 40L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "6th time",
                            Value = 6
                        },
                        new
                        {
                            Id = 41L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "7th time",
                            Value = 7
                        },
                        new
                        {
                            Id = 42L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "8th time",
                            Value = 8
                        },
                        new
                        {
                            Id = 43L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "9th time",
                            Value = 9
                        },
                        new
                        {
                            Id = 44L,
                            ColumnListId = 6L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "10th time",
                            Value = 10
                        },
                        new
                        {
                            Id = 45L,
                            ColumnListId = 7L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Host Communities",
                            Value = 1
                        },
                        new
                        {
                            Id = 46L,
                            ColumnListId = 7L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Refugee Communities",
                            Value = 2
                        },
                        new
                        {
                            Id = 47L,
                            ColumnListId = 7L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Both Communities",
                            Value = 3
                        },
                        new
                        {
                            Id = 48L,
                            ColumnListId = 8L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Learning Center(LC)",
                            Value = 1
                        },
                        new
                        {
                            Id = 49L,
                            ColumnListId = 8L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Community Based Learning Facility",
                            Value = 2
                        },
                        new
                        {
                            Id = 50L,
                            ColumnListId = 8L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cross Sectoral Shared Learning Facility (CSSLF)",
                            Value = 3
                        },
                        new
                        {
                            Id = 51L,
                            ColumnListId = 9L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ongoing",
                            Value = 1
                        },
                        new
                        {
                            Id = 52L,
                            ColumnListId = 9L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Completed",
                            Value = 2
                        },
                        new
                        {
                            Id = 53L,
                            ColumnListId = 9L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Planned",
                            Value = 3
                        },
                        new
                        {
                            Id = 54L,
                            ColumnListId = 9L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Decommission",
                            Value = 4
                        },
                        new
                        {
                            Id = 55L,
                            ColumnListId = 10L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Male",
                            Value = 1
                        },
                        new
                        {
                            Id = 56L,
                            ColumnListId = 10L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Female",
                            Value = 2
                        },
                        new
                        {
                            Id = 57L,
                            ColumnListId = 10L,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Others",
                            Value = 3
                        });
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("StateText")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStampUtc")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("LogEntry");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Actor")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<bool>("IsActed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .HasColumnType("text");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 759, DateTimeKind.Local).AddTicks(9605),
                            Name = "Beneficiary Instance Start"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 760, DateTimeKind.Local).AddTicks(1055),
                            Name = "Facility Instance Start"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 760, DateTimeKind.Local).AddTicks(1084),
                            Name = "Recollect Facility"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 760, DateTimeKind.Local).AddTicks(1088),
                            Name = "Recollect Beneficiary"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2021, 5, 11, 11, 37, 15, 760, DateTimeKind.Local).AddTicks(1091),
                            Name = "Assign Teacher"
                        });
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("PermissionName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.PermissionPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("PresetName")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permission_Presets");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.PermissionPresetPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionPresetId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId", "PermissionPresetId");

                    b.HasIndex("PermissionPresetId");

                    b.ToTable("Permission_Preset_Permission");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Role_Permissions");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("ScheduleFor")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("ScheduleType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.SubBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("SubBlock");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Union", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int>("UpazilaId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UpazilaId");

                    b.ToTable("Union");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Upazila", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Upazila");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.UserDynamicCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("EntityDynamicColumnId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicColumnId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Dynamic_Cells");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.UserEduSectorPartner", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerType")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PartnerId", "PartnerType");

                    b.HasIndex("PartnerId");

                    b.ToTable("User_EduSector_Partners");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.UserLevel", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("LevelName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User_Levels");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.BeneficiaryDataCollectionStatus", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Beneficiary", "Beneficiary")
                        .WithMany("BeneciaryDataCollectionStatuses")
                        .HasForeignKey("BeneficiaryId")
                        .HasConstraintName("FK__BeneciaryDataCollectionStatuses__BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Instance", "ScheduleInstance")
                        .WithMany("BeneciariesDataCollectionStatus")
                        .HasForeignKey("InstanceId")
                        .HasConstraintName("FK__BeneciaryDataCollectionStatuses__InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.BeneficiaryDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Beneficiary", "Beneficiary")
                        .WithMany("BenificiaryDynamicCells")
                        .HasForeignKey("BeneficiaryId")
                        .HasConstraintName("FK__BeenficiaryDynamicCell__BeneficairyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("DynamicCell")
                        .HasForeignKey("EntityDynamicColumnId")
                        .HasConstraintName("FK__DynamicCe__EntityColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Block", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Camp", "Camp")
                        .WithMany("Blocks")
                        .HasForeignKey("CampId")
                        .HasConstraintName("FK__Blocks__CampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Camp", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Union", "Union")
                        .WithMany("Camps")
                        .HasForeignKey("UnionId")
                        .HasConstraintName("FK__Camps__UnionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.CampCoordinate", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Camp", "Camp")
                        .WithMany("CampCoordinates")
                        .HasForeignKey("CampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.EntityDynamicColumn", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.ListDataType", "ColumnList")
                        .WithMany("EntityDynamicColumns")
                        .HasForeignKey("ColumnListId")
                        .HasConstraintName("FK__EntityDynamicColumns__ColumnListId");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.FacilityDataCollectionStatus", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Facility", "Facility")
                        .WithMany("FacilityDataCollectionStatus")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Instance", "ScheduleInstance")
                        .WithMany("FacilitiesDataCollectionStatus")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.FacilityDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("FacilityDynamicCells")
                        .HasForeignKey("EntityDynamicColumnId")
                        .HasConstraintName("FK__FacilityDynamicCells__EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Facility", "Facility")
                        .WithMany("FacilityDynamicCells")
                        .HasForeignKey("FacilityId")
                        .HasConstraintName("FK__FacilityDynamicCells__FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Instance", "Instance")
                        .WithMany("FacilityDynamicCells")
                        .HasForeignKey("InstanceId")
                        .HasConstraintName("FK__FacilityDynamicCells__InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.BudgetFramework", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.Donor", "Donor")
                        .WithMany("BudgetFrameworks")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.Project", "Project")
                        .WithMany("BudgetFrameworks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.BudgetFrameworkDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.BudgetFramework", "BudgetFramework")
                        .WithMany("DynamicCells")
                        .HasForeignKey("BudgetFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("BudgetFrameworkDynamicCells")
                        .HasForeignKey("EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.MonitoringFrameworkDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany()
                        .HasForeignKey("EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.ObjectiveIndicator", "ObjectiveIndicator")
                        .WithMany("DynamicCells")
                        .HasForeignKey("ObjectiveIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.ObjectiveIndicator", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.MonitoringFramework", "MonitoringFramework")
                        .WithMany("ObjectiveIndicators")
                        .HasForeignKey("MonitoringFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.EducationSectorPartner", "Organization")
                        .WithMany("ObjectiveIndicators")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.ReportingFrequency", "ReportingFrequency")
                        .WithMany("ObjectiveIndicator")
                        .HasForeignKey("ReportingFrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.TargetFramework", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.AgeGroup", "AgeGroup")
                        .WithMany()
                        .HasForeignKey("AgeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Camp", "Camp")
                        .WithMany("TargetFrameworks")
                        .HasForeignKey("CampId");
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Framework.TargetFrameworkDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("TargetFrameworkDynamicCells")
                        .HasForeignKey("EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.TargetFramework", "TargetFramework")
                        .WithMany("DynamicCells")
                        .HasForeignKey("TargetFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Frequency", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Schedule", "Schedule")
                        .WithOne("Frequency")
                        .HasForeignKey("UnicefEducationMIS.Core.Models.Frequency", "ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.GridViewDetails", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("BeneficiaryViewDetails")
                        .HasForeignKey("EntityDynamicColumnId")
                        .HasConstraintName("FK__BeneficiaryViewDetails__EntityColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.GridView", "BeneficiaryView")
                        .WithMany("GridViewDetails")
                        .HasForeignKey("GridViewId")
                        .HasConstraintName("FK__BeneficiaryViewDetails__BeneficiaryGridViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.Role", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.UserLevel", "Level")
                        .WithMany("Roles")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.PermissionPreset", "PermissionPreset")
                        .WithMany()
                        .HasForeignKey("PermissionPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.RoleClaim", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Identity.UserRole", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Instance", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Schedule", "Schedule")
                        .WithMany("Instances")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.InstanceIndicator", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("InstanceIndicators")
                        .HasForeignKey("EntityDynamicColumnId")
                        .HasConstraintName("FK_InstanceIndicators_EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Instance", "Instance")
                        .WithMany("InstanceIndicators")
                        .HasForeignKey("InstanceId")
                        .HasConstraintName("FK_InstanceIndicators_InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.JrpParameterInfo", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany("JrpParameterInfos")
                        .HasForeignKey("IndicatorId")
                        .HasConstraintName("FK__JrpParameterInfo__IndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Framework.ObjectiveIndicator", "ObjectiveIndicator")
                        .WithMany("JrpParameterInfos")
                        .HasForeignKey("TargetId")
                        .HasConstraintName("FK__JrpParameterInfo__TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.ListItem", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.ListDataType", "ColumnList")
                        .WithMany("ListItems")
                        .HasForeignKey("ColumnListId")
                        .HasConstraintName("FK__ListItems__ColumnListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Notification", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.NotificationType", "NotificationType")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK__Notification__NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.PermissionPresetPermission", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Permission", "Permission")
                        .WithMany("PermissionPresetPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.PermissionPreset", "PermissionPreset")
                        .WithMany("PermissionPresetPermissions")
                        .HasForeignKey("PermissionPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.RolePermission", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.SubBlock", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Block", "Block")
                        .WithMany("SubBlocks")
                        .HasForeignKey("BlockId")
                        .HasConstraintName("FK__SubBlocks__BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Union", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.Upazila", "Upazila")
                        .WithMany("Unions")
                        .HasForeignKey("UpazilaId")
                        .HasConstraintName("FK__Unions__UpazilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.Upazila", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.District", "District")
                        .WithMany("Upazilas")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK__Upazila__DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.UserDynamicCell", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EntityDynamicColumn", "EntityDynamicColumn")
                        .WithMany()
                        .HasForeignKey("EntityDynamicColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.User", "User")
                        .WithMany("DynamicCells")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnicefEducationMIS.Core.Models.UserEduSectorPartner", b =>
                {
                    b.HasOne("UnicefEducationMIS.Core.Models.EducationSectorPartner", "Partner")
                        .WithMany("Partners")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnicefEducationMIS.Core.Models.Identity.User", "User")
                        .WithMany("UserEduSectorPartners")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
